controller_manager:
  ros__parameters:
    update_rate: 50

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    tr1200_controller:
      type: diff_drive_controller/DiffDriveController

joint_state_broadcaster:
  ros__parameters:
    type: joint_state_broadcaster/JointStateBroadcaster

    # Frequency (in Hz) at which joint states are published. (default: 50.0)
    publish_rate: 50

    joints:
    - left_wheel_joint
    - right_wheel_joint

tr1200_controller:
  ros__parameters:
    type: diff_drive_controller/DiffDriveController

    ### Joint Parameters

    # Link names of the left side wheels
    left_wheel_names:
    - left_wheel_joint

    # Link names of the right side wheels
    right_wheel_names:
    - right_wheel_joint

    ### Covariance Parameters

    # Odometry covariance for the encoder output of the robot for the pose.
    pose_covariance_diagonal:
    - 0.001
    - 0.001
    - 0.001
    - 0.001
    - 0.001
    - 0.001

    # Odometry covariance for the encoder output of the robot for the speed.
    twist_covariance_diagonal:
    - 0.001
    - 0.001
    - 0.001
    - 0.001
    - 0.001
    - 0.001

    ### Time Related Parameters

    # Publishing rate (Hz) of the odometry and TF messages.
    publish_rate: 50.0

    # Allowed period (in s) allowed between two successive velocity commands. After this delay, a
    # zero speed command will be sent to the wheels. (default: 0.5)
    cmd_vel_timeout: 0.5

    ### TF Related Parameters

    # Base frame_id, which is used to fill in the child_frame_id of the Odometry messages and TF.
    # (default: base_link)
    base_frame_id: base_link

    # Name of the frame for odometry. This frame is parent of ``base_frame_id`` when controller
    # publishes odometry.
    odom_frame_id: odom

    # Publish transformation between ``odom_frame_id`` and ``base_frame_id``.
    enable_odom_tf: true

    ### Calibration Parameters

    # Shortest distance between the left and right wheels.
    wheel_separation: 0.424

    # Correction factor for wheel separation.
    wheel_separation_multiplier: 1.0

    # Radius of a wheel, i.e., wheels size, used for transformation of linear velocity into wheel
    # rotations. If this parameter is wrong the robot will move faster or slower then expected.
    wheel_radius: 0.0795

    # Correction factor when radius of left wheels differs from the nominal value in
    # ``wheel_radius`` parameter.
    left_wheel_radius_multiplier: 1.0

    # Correction factor when radius of right wheels differs from the nominal value in
    # ``wheel_radius`` parameter.
    right_wheel_radius_multiplier: 1.0

    ### Control Parameters

    # Number of control signals to the wheels on each side of the robot.
    wheels_per_side: 1

    # If set to true the odometry of the robot will be calculated from the commanded values and not
    # from feedback.
    open_loop: false

    # Is there position feedback from hardware.
    position_feedback: false

    # Publish limited velocity value.
    publish_limited_velocity: false

    # Size of the rolling window for calculation of mean velocity use in odometry.
    velocity_rolling_window_size: 10

    # Use stamp from input velocity message to calculate how old the command actually is.
    use_stamped_vel: false

    ### Limiter Parameters

    linear:
      x:
        # Whether the controller should limit linear speed or not. (default: false)
        has_velocity_limits: true

        # Maximum linear velocity (in m/s)
        max_velocity: 1.5

        # Minimum linear velocity (in m/s). Setting this to 0.0 will disable backwards motion. When
        # unspecified, -max_velocity is used.
        min_velocity: -1.5

        # Whether the controller should limit linear acceleration or not. (default: false)
        has_acceleration_limits: true

        # Maximum linear acceleration (in m/s^2)
        max_acceleration: 1.5

    angular:
      z:
        # Whether the controller should limit angular velocity or not. (default: false)
        has_velocity_limits: true

        # Maximum angular velocity (in rad/s)
        max_velocity: 1.0

        # Minimum angular velocity (in rad/s). Setting this to 0.0 will disable counter-clockwise
        # rotation. When unspecified, -max_velocity is used.
        min_velocity: -1.0

        # Whether the controller should limit angular acceleration or not.
        has_acceleration_limits: false

        # Maximum angular acceleration (in rad/s^2)
        max_acceleration: 0.75
