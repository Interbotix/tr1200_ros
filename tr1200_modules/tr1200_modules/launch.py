# Copyright 2024 Trossen Robotics
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#
#    * Neither the name of the copyright holder nor the names of its
#      contributors may be used to endorse or promote products derived from
#      this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

from typing import (
    List,
    Optional,
    Text,
)

from launch import SomeSubstitutionsType
from launch.actions import DeclareLaunchArgument
from launch.substitutions import (
    Command,
    FindExecutable,
    LaunchConfiguration,
    PathJoinSubstitution,
)
from launch_ros.substitutions import FindPackageShare


class DeclareInterbotixTR1200RobotDescriptionLaunchArgument(DeclareLaunchArgument):
    """Generate a URDF of a TR1200 through a modified DeclareLaunchArgument object."""

    def __init__(
        self,
        *,
        robot_description_launch_config_name: Text = 'robot_description',
        robot_name_launch_config_name: Text = 'robot_name',
        default_value: Optional[SomeSubstitutionsType] = None,
        **kwargs
    ) -> None:
        """
        Construct the modified DeclareLaunchArgument object.

        :param robot_description_launch_config_name: Name of the robot description launch
            configuration. This is typically only changed when multiple robots are to be launched.
            Defaults to `robot_description`
        :param robot_name_launch_config_name: Name of the robot name launch configuration.
            This is typically only changed when multiple robots are to be launched. Defaults to
            `tr1200`
        :param default_value: The default model given to the parent DeclareLaunchArgument; if you
            want to override this value, it must follow the convention in this object's source
        """
        if default_value is None:
            default_value = Command([
                FindExecutable(name='xacro'), ' ',
                PathJoinSubstitution([
                    FindPackageShare('tr1200_description'),
                    'urdf',
                    'tr1200.urdf.xacro ',
                ]),
                'robot_name:=', LaunchConfiguration(robot_name_launch_config_name), ' ',
            ]),
        super().__init__(
            name=robot_description_launch_config_name,
            default_value=default_value,
            description=(
                'URDF of the robot; this is typically generated by the xacro command.'
            ),
            choices=None,
            **kwargs,
        )


def declare_interbotix_tr1200_robot_description_launch_arguments(
    *,
    robot_description_launch_config_name: Text = 'robot_description',
    robot_name_launch_config_name: Text = 'robot_name',
) -> List[DeclareLaunchArgument]:
    """
    Return a robot description DeclareLaunchArgument and its required children.

    :details: Include this in your LaunchDescription by appending its output to the list of
        DeclareLaunchArguments
    """
    return [
        DeclareInterbotixTR1200RobotDescriptionLaunchArgument(
            robot_description_launch_config_name=robot_description_launch_config_name,
            robot_name_launch_config_name=robot_name_launch_config_name,
        ),
    ]
